
# Nginx Security Configuration for AI Employee Platform
# Include this in your main nginx.conf

# Security headers
add_header X-Frame-Options "DENY" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;
add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(self)" always;

# HSTS (only enable in production with valid SSL)
# add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# Content Security Policy
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.openai.com https://api.anthropic.com; frame-src 'none'; object-src 'none'; base-uri 'self'; form-action 'self'" always;

# Hide Nginx version
server_tokens off;

# Disable unused HTTP methods
if ($request_method !~ ^(GET|HEAD|POST|PUT|PATCH|DELETE|OPTIONS)$) {
    return 405;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=auth:10m rate=50r/m;
limit_req_zone $binary_remote_addr zone=ai:10m rate=20r/m;
limit_req_zone $binary_remote_addr zone=strict:10m rate=10r/m;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
limit_conn conn_limit_per_ip 20;

# Request size limits
client_max_body_size 50M;
client_body_buffer_size 128k;
client_header_buffer_size 3m;
large_client_header_buffers 4 256k;

# Timeouts
client_body_timeout 30s;
client_header_timeout 30s;
keepalive_timeout 30s;
send_timeout 30s;

# Buffer overflow protection
client_body_buffer_size 128k;
client_header_buffer_size 1k;
large_client_header_buffers 2 1k;

# IP Whitelist for admin endpoints (uncomment and configure for production)
# geo $admin_allowed {
#     default 0;
#     127.0.0.1 1;
#     192.168.1.0/24 1;
#     # Add your admin IP ranges here
# }

# Block common exploit attempts
location ~* \.(php|aspx|asp|jsp)$ {
    return 404;
}

# Block access to sensitive files
location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf|yml|yaml)$ {
    deny all;
    return 404;
}

# Block suspicious user agents
if ($http_user_agent ~* (nmap|nikto|wikto|sf|sqlmap|bsqlbf|w3af|acunetix|havij|appscan)) {
    return 444;
}

# Block suspicious request patterns
if ($request_uri ~* "(\<|%3C).*script.*(\>|%3E)") {
    return 444;
}

if ($request_uri ~* "(union|select|insert|drop|delete|update|cast|create|char|convert|alter|declare|exec|cmd|sys|sp_|xp_)(.*)") {
    return 444;
}

# Block directory traversal attempts
if ($request_uri ~* "(\.\./)") {
    return 444;
}

# Block null byte attacks
if ($request_uri ~* "\x00") {
    return 444;
}

# MIME type security
location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    add_header Cache-Control "public, max-age=31536000";
    add_header X-Content-Type-Options "nosniff";
    expires 1y;
}

# Specific location configurations for API endpoints
location /api/auth/ {
    limit_req zone=auth burst=10 nodelay;
    limit_req_status 429;
    
    # Additional security for auth endpoints
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        add_header 'Access-Control-Max-Age' 86400 always;
        return 204;
    }
    
    proxy_pass http://auth-service:3001;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

location /api/ai/ {
    limit_req zone=ai burst=5 nodelay;
    limit_req_status 429;
    
    # Extended timeouts for AI processing
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    
    # Streaming support
    proxy_buffering off;
    proxy_cache off;
    
    proxy_pass http://ai-routing-service:3002;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

location /api/users/ {
    limit_req zone=general burst=20 nodelay;
    limit_req_status 429;
    
    proxy_pass http://user-management-service:3003;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

# Admin endpoints with stricter rate limiting
location /admin/ {
    limit_req zone=strict burst=2 nodelay;
    
    # Uncomment for IP whitelist protection
    # if ($admin_allowed = 0) {
    #     return 403;
    # }
    
    proxy_pass http://admin-dashboard:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

# Health check endpoint (no rate limiting)
location /health {
    access_log off;
    return 200 "OK";
    add_header Content-Type text/plain;
}

# Metrics endpoint (restricted access)
location /metrics {
    # Restrict to internal networks only
    allow 127.0.0.1;
    allow 10.0.0.0/8;
    allow 172.16.0.0/12;
    allow 192.168.0.0/16;
    deny all;
    
    proxy_pass http://auth-service:3001/metrics;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
}

# Error page configurations
error_page 400 401 402 403 404 /4xx.html;
error_page 500 501 502 503 504 505 /5xx.html;

location = /4xx.html {
    root /usr/share/nginx/html;
    internal;
}

location = /5xx.html {
    root /usr/share/nginx/html;
    internal;
}

# Logging configuration for security monitoring
log_format security_log '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '$request_time $upstream_response_time '
                       '$request_length $bytes_sent';

access_log /var/log/nginx/security.log security_log;

# DDoS protection
limit_req_log_level warn;
limit_conn_log_level warn;

# SSL Configuration (uncomment when SSL certificates are available)
# ssl_protocols TLSv1.2 TLSv1.3;
# ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
# ssl_prefer_server_ciphers off;
# ssl_session_cache shared:SSL:10m;
# ssl_session_timeout 10m;
# ssl_stapling on;
# ssl_stapling_verify on;
